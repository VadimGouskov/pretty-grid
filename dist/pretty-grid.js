!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.prettyGrid=e():t.prettyGrid=e()}(this,(function(){return(()=>{"use strict";var t={d:(e,o)=>{for(var n in o)t.o(o,n)&&!t.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:o[n]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};t.r(e),t.d(e,{Grid:()=>n});var o=function(t,e){this.x=t,this.y=e},n=function(){function t(t,e,n,r){this.points=[[]];for(var i=n/(t-1),p=r/(e-1),f=0;f<t;f++){this.points[f]=[];for(var s=0;s<e;s++)this.points[f][s]=new o(f*i,s*p)}}return Object.defineProperty(t.prototype,"flat",{get:function(){return this.points.reduce((function(t,e){return t.concat(e)}),[])},enumerable:!1,configurable:!0}),t.prototype.get=function(){return this.points},t.prototype.set=function(t){this.points=t},t.prototype.getPoint=function(t,e){return this.points[t][e]},t.prototype.draw=function(t){this.flat.forEach((function(e){return t(e)}))},t.prototype.translate=function(t,e){this.points.forEach((function(o){return o.forEach((function(o){o.x+=t,o.y+=e}))}))},t.prototype.copy=function(){var e=new t(this.points.length,this.points[0].length,0,0),o=JSON.parse(JSON.stringify(this.points));return e.set(o),e},t}();return e})()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJldHR5LWdyaWQuanMiLCJtYXBwaW5ncyI6IkNBQUEsU0FBMkNBLEVBQU1DLEdBQzFCLGlCQUFaQyxTQUEwQyxpQkFBWEMsT0FDeENBLE9BQU9ELFFBQVVELElBQ1EsbUJBQVhHLFFBQXlCQSxPQUFPQyxJQUM5Q0QsT0FBTyxHQUFJSCxHQUNlLGlCQUFaQyxRQUNkQSxRQUFvQixXQUFJRCxJQUV4QkQsRUFBaUIsV0FBSUMsSUFSdkIsQ0FTR0ssTUFBTSxXQUNULE0sbUJDVEEsSUFBSUMsRUFBc0IsQ0NBMUJBLEVBQXdCLENBQUNMLEVBQVNNLEtBQ2pDLElBQUksSUFBSUMsS0FBT0QsRUFDWEQsRUFBb0JHLEVBQUVGLEVBQVlDLEtBQVNGLEVBQW9CRyxFQUFFUixFQUFTTyxJQUM1RUUsT0FBT0MsZUFBZVYsRUFBU08sRUFBSyxDQUFFSSxZQUFZLEVBQU1DLElBQUtOLEVBQVdDLE1DSjNFRixFQUF3QixDQUFDUSxFQUFLQyxJQUFVTCxPQUFPTSxVQUFVQyxlQUFlQyxLQUFLSixFQUFLQyxHQ0NsRlQsRUFBeUJMLElBQ0gsb0JBQVhrQixRQUEwQkEsT0FBT0MsYUFDMUNWLE9BQU9DLGVBQWVWLEVBQVNrQixPQUFPQyxZQUFhLENBQUVDLE1BQU8sV0FFN0RYLE9BQU9DLGVBQWVWLEVBQVMsYUFBYyxDQUFFb0IsT0FBTyxNLGdDQ0x2RCxNQUdJLFNBQVlDLEVBQVdDLEdBQ25CbEIsS0FBS2lCLEVBQUlBLEVBQ1RqQixLQUFLa0IsRUFBSUEsR0FJakIsYUFHSSxXQUFZQyxFQUFjQyxFQUFjQyxFQUFlQyxHQUYvQyxLQUFBQyxPQUF3QixDQUFDLElBTzdCLElBSkEsSUFBTUMsRUFBV0gsR0FBU0YsRUFBTyxHQUMzQk0sRUFBV0gsR0FBVUYsRUFBTyxHQUd6Qk0sRUFBSSxFQUFHQSxFQUFJUCxFQUFNTyxJQUFLLENBQzNCMUIsS0FBS3VCLE9BQU9HLEdBQUssR0FDakIsSUFBSyxJQUFJQyxFQUFJLEVBQUdBLEVBQUlQLEVBQU1PLElBQ3RCM0IsS0FBS3VCLE9BQU9HLEdBQUdDLEdBQUssSUFBSUMsRUFBVUYsRUFBSUYsRUFBVUcsRUFBSUYsSUF1RHBFLE9BbERJLHNCQUFJLG1CQUFJLEMsSUFBUixXQUNJLE9BQU96QixLQUFLdUIsT0FBT00sUUFBTyxTQUFDQyxFQUFLQyxHQUFRLE9BQUFELEVBQUlFLE9BQU9ELEtBQU0sSyxnQ0FHN0QsWUFBQXZCLElBQUEsV0FDSSxPQUFPUixLQUFLdUIsUUFHaEIsWUFBQVUsSUFBQSxTQUFJVixHQUNBdkIsS0FBS3VCLE9BQVNBLEdBR2xCLFlBQUFXLFNBQUEsU0FBU0MsRUFBYUMsR0FDbEIsT0FBT3BDLEtBQUt1QixPQUFPWSxHQUFLQyxJQUc1QixZQUFBQyxLQUFBLFNBQUtDLEdBQ0R0QyxLQUFLdUMsS0FBS0MsU0FBUSxTQUFDQyxHQUFVLE9BQUFILEVBQUtHLE9BR3RDLFlBQUFDLFVBQUEsU0FBVXpCLEVBQVdDLEdBQ2pCbEIsS0FBS3VCLE9BQU9pQixTQUFRLFNBQUNMLEdBQ2pCLE9BQUFBLEVBQUlLLFNBQVEsU0FBQ0MsR0FDVEEsRUFBTXhCLEdBQUtBLEVBQ1h3QixFQUFNdkIsR0FBS0EsU0FLdkIsWUFBQXlCLEtBQUEsV0FDSSxJQUtNQyxFQUFhLElBQUlDLEVBTFY3QyxLQUFLdUIsT0FBT3VCLE9BRVo5QyxLQUFLdUIsT0FBTyxHQUFHdUIsT0FHWSxFQUFHLEdBQ3JDQyxFQUFnQ0MsS0FBS0MsTUFBTUQsS0FBS0UsVUFBVWxELEtBQUt1QixTQUdyRSxPQUZBcUIsRUFBV1gsSUFBSWMsR0FFUkgsR0FXZixFQWxFQSxHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJldHR5R3JpZC93ZWJwYWNrL3VuaXZlcnNhbE1vZHVsZURlZmluaXRpb24iLCJ3ZWJwYWNrOi8vcHJldHR5R3JpZC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9wcmV0dHlHcmlkL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly9wcmV0dHlHcmlkL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vcHJldHR5R3JpZC93ZWJwYWNrL3J1bnRpbWUvbWFrZSBuYW1lc3BhY2Ugb2JqZWN0Iiwid2VicGFjazovL3ByZXR0eUdyaWQvLi9zcmMvZ3JpZC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gd2VicGFja1VuaXZlcnNhbE1vZHVsZURlZmluaXRpb24ocm9vdCwgZmFjdG9yeSkge1xuXHRpZih0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIG1vZHVsZSA9PT0gJ29iamVjdCcpXG5cdFx0bW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KCk7XG5cdGVsc2UgaWYodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKVxuXHRcdGRlZmluZShbXSwgZmFjdG9yeSk7XG5cdGVsc2UgaWYodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnKVxuXHRcdGV4cG9ydHNbXCJwcmV0dHlHcmlkXCJdID0gZmFjdG9yeSgpO1xuXHRlbHNlXG5cdFx0cm9vdFtcInByZXR0eUdyaWRcIl0gPSBmYWN0b3J5KCk7XG59KSh0aGlzLCBmdW5jdGlvbigpIHtcbnJldHVybiAiLCIvLyBUaGUgcmVxdWlyZSBzY29wZVxudmFyIF9fd2VicGFja19yZXF1aXJlX18gPSB7fTtcblxuIiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsIi8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uciA9IChleHBvcnRzKSA9PiB7XG5cdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuXHR9XG5cdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG59OyIsImV4cG9ydCBjbGFzcyBHcmlkUG9pbnQge1xuICAgIHg6IG51bWJlcjtcbiAgICB5OiBudW1iZXI7XG4gICAgY29uc3RydWN0b3IoeDogbnVtYmVyLCB5OiBudW1iZXIpIHtcbiAgICAgICAgdGhpcy54ID0geDtcbiAgICAgICAgdGhpcy55ID0geTtcbiAgICB9XG59XG5cbmV4cG9ydCBjbGFzcyBHcmlkIHtcbiAgICBwcml2YXRlIHBvaW50czogR3JpZFBvaW50W11bXSA9IFtbXV07XG5cbiAgICBjb25zdHJ1Y3Rvcihjb2xzOiBudW1iZXIsIHJvd3M6IG51bWJlciwgd2lkdGg6IG51bWJlciwgaGVpZ2h0OiBudW1iZXIpIHtcbiAgICAgICAgY29uc3Qgc3RlcENvbHMgPSB3aWR0aCAvIChjb2xzIC0gMSk7XG4gICAgICAgIGNvbnN0IHN0ZXBSb3dzID0gaGVpZ2h0IC8gKHJvd3MgLSAxKTtcblxuICAgICAgICAvLyBpbml0aWFsaXplIGdyaWRcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjb2xzOyBpKyspIHtcbiAgICAgICAgICAgIHRoaXMucG9pbnRzW2ldID0gW107XG4gICAgICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IHJvd3M7IGorKykge1xuICAgICAgICAgICAgICAgIHRoaXMucG9pbnRzW2ldW2pdID0gbmV3IEdyaWRQb2ludChpICogc3RlcENvbHMsIGogKiBzdGVwUm93cyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBnZXQgZmxhdCgpOiBHcmlkUG9pbnRbXSB7XG4gICAgICAgIHJldHVybiB0aGlzLnBvaW50cy5yZWR1Y2UoKGFjYywgdmFsKSA9PiBhY2MuY29uY2F0KHZhbCksIFtdKTtcbiAgICB9XG5cbiAgICBnZXQoKTogR3JpZFBvaW50W11bXSB7XG4gICAgICAgIHJldHVybiB0aGlzLnBvaW50cztcbiAgICB9XG5cbiAgICBzZXQocG9pbnRzOiBHcmlkUG9pbnRbXVtdKTogdm9pZCB7XG4gICAgICAgIHRoaXMucG9pbnRzID0gcG9pbnRzO1xuICAgIH1cblxuICAgIGdldFBvaW50KGNvbDogbnVtYmVyLCByb3c6IG51bWJlcik6IEdyaWRQb2ludCB7XG4gICAgICAgIHJldHVybiB0aGlzLnBvaW50c1tjb2xdW3Jvd107XG4gICAgfVxuXG4gICAgZHJhdyhmdW5jOiAocG9pbnQ6IEdyaWRQb2ludCkgPT4gdm9pZCk6IHZvaWQge1xuICAgICAgICB0aGlzLmZsYXQuZm9yRWFjaCgocG9pbnQpID0+IGZ1bmMocG9pbnQpKTtcbiAgICB9XG5cbiAgICB0cmFuc2xhdGUoeDogbnVtYmVyLCB5OiBudW1iZXIpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5wb2ludHMuZm9yRWFjaCgoY29sKSA9PlxuICAgICAgICAgICAgY29sLmZvckVhY2goKHBvaW50KSA9PiB7XG4gICAgICAgICAgICAgICAgcG9pbnQueCArPSB4O1xuICAgICAgICAgICAgICAgIHBvaW50LnkgKz0geTtcbiAgICAgICAgICAgIH0pLFxuICAgICAgICApO1xuICAgIH1cblxuICAgIGNvcHkoKTogR3JpZCB7XG4gICAgICAgIGNvbnN0IGNvbHMgPSB0aGlzLnBvaW50cy5sZW5ndGg7XG4gICAgICAgIC8vIFRPRE8gdGFrZSBpbnRvIGFjY291bnQgcG9zaWJpbGl0eSBvZiBtb2RpZmllZCByb3dcbiAgICAgICAgY29uc3Qgcm93cyA9IHRoaXMucG9pbnRzWzBdLmxlbmd0aDtcblxuICAgICAgICAvLyBXaWR0aCBhbmQgaGVpZ2h0IG9mIGdyaWQgZG8gbm90IG1hdHRlciwgd2lsbCBnZXQgc2V0XG4gICAgICAgIGNvbnN0IGNvcGllZEdyaWQgPSBuZXcgR3JpZChjb2xzLCByb3dzLCAwLCAwKTtcbiAgICAgICAgY29uc3QgcG9pbnRzRGVlcENvcHk6IEdyaWRQb2ludFtdW10gPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRoaXMucG9pbnRzKSk7XG4gICAgICAgIGNvcGllZEdyaWQuc2V0KHBvaW50c0RlZXBDb3B5KTtcblxuICAgICAgICByZXR1cm4gY29waWVkR3JpZDtcbiAgICB9XG5cbiAgICAvKiBcbiAgICBnZXRTZWN0aW9uKHN0YXJ0Q29sOiBudW1iZXIsIGVuZENvbDogbnVtYmVyLCBzdGFydFJvdzogbnVtYmVyLCBlbmRSb3c6IG51bWJlcik6IEdyaWQge1xuICAgICAgICBjb25zdCBzbGljZSA9IHRoaXMucG9pbnRzLnNsaWNlKHN0YXJ0Q29sLCBlbmRDb2wgKyAxKS5tYXAoKGkpID0+IGkuc2xpY2Uoc3RhcnRSb3csIGVuZFJvdyArIDEpKTtcbiAgICAgICAgY29uc3QgZ3JpZEZyb21TbGljZSA9IG5ldyBHcmlkKHNsaWNlWzBdLmxlbmd0aCwgc2xpY2UubGVuZ3RoLCAwLCAwKTtcbiAgICAgICAgZ3JpZEZyb21TbGljZS5zZXQoc2xpY2UpO1xuICAgICAgICByZXR1cm4gZ3JpZEZyb21TbGljZTtcbiAgICB9XG4gICAgKi9cbn1cbiJdLCJuYW1lcyI6WyJyb290IiwiZmFjdG9yeSIsImV4cG9ydHMiLCJtb2R1bGUiLCJkZWZpbmUiLCJhbWQiLCJ0aGlzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0Iiwib2JqIiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJ4IiwieSIsImNvbHMiLCJyb3dzIiwid2lkdGgiLCJoZWlnaHQiLCJwb2ludHMiLCJzdGVwQ29scyIsInN0ZXBSb3dzIiwiaSIsImoiLCJHcmlkUG9pbnQiLCJyZWR1Y2UiLCJhY2MiLCJ2YWwiLCJjb25jYXQiLCJzZXQiLCJnZXRQb2ludCIsImNvbCIsInJvdyIsImRyYXciLCJmdW5jIiwiZmxhdCIsImZvckVhY2giLCJwb2ludCIsInRyYW5zbGF0ZSIsImNvcHkiLCJjb3BpZWRHcmlkIiwiR3JpZCIsImxlbmd0aCIsInBvaW50c0RlZXBDb3B5IiwiSlNPTiIsInBhcnNlIiwic3RyaW5naWZ5Il0sInNvdXJjZVJvb3QiOiIifQ==