!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.prettyGrid=e():t.prettyGrid=e()}(self,(function(){return(()=>{"use strict";var t={d:(e,o)=>{for(var n in o)t.o(o,n)&&!t.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:o[n]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};t.r(e),t.d(e,{Grid:()=>n});var o=function(t,e){this.x=t,this.y=e},n=function(){function t(t,e,n,r){this.points=[[]];for(var i=n/(t-1),p=r/(e-1),u=0;u<t;u++){this.points[u]=[];for(var f=0;f<e;f++)this.points[u][f]=new o(u*i,f*p)}}return Object.defineProperty(t.prototype,"flat",{get:function(){return this.points.reduce((function(t,e){return t.concat(e)}),[])},enumerable:!1,configurable:!0}),t.prototype.get=function(){return this.points},t.prototype.set=function(t){this.points=t},t.prototype.getPoint=function(t,e){return this.points[t][e]},t.prototype.getSection=function(e,o,n,r){var i=this.points.slice(e,o+1).map((function(t){return t.slice(n,r+1)})),p=new t(i[0].length,i.length,0,0);return p.set(i),p},t.prototype.draw=function(t){this.flat.forEach((function(e){return t(e)}))},t}();return e})()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJldHR5LWdyaWQuanMiLCJtYXBwaW5ncyI6IkNBQUEsU0FBMkNBLEVBQU1DLEdBQzFCLGlCQUFaQyxTQUEwQyxpQkFBWEMsT0FDeENBLE9BQU9ELFFBQVVELElBQ1EsbUJBQVhHLFFBQXlCQSxPQUFPQyxJQUM5Q0QsT0FBTyxHQUFJSCxHQUNlLGlCQUFaQyxRQUNkQSxRQUFvQixXQUFJRCxJQUV4QkQsRUFBaUIsV0FBSUMsSUFSdkIsQ0FTR0ssTUFBTSxXQUNULE0sbUJDVEEsSUFBSUMsRUFBc0IsQ0NBMUJBLEVBQXdCLENBQUNMLEVBQVNNLEtBQ2pDLElBQUksSUFBSUMsS0FBT0QsRUFDWEQsRUFBb0JHLEVBQUVGLEVBQVlDLEtBQVNGLEVBQW9CRyxFQUFFUixFQUFTTyxJQUM1RUUsT0FBT0MsZUFBZVYsRUFBU08sRUFBSyxDQUFFSSxZQUFZLEVBQU1DLElBQUtOLEVBQVdDLE1DSjNFRixFQUF3QixDQUFDUSxFQUFLQyxJQUFVTCxPQUFPTSxVQUFVQyxlQUFlQyxLQUFLSixFQUFLQyxHQ0NsRlQsRUFBeUJMLElBQ0gsb0JBQVhrQixRQUEwQkEsT0FBT0MsYUFDMUNWLE9BQU9DLGVBQWVWLEVBQVNrQixPQUFPQyxZQUFhLENBQUVDLE1BQU8sV0FFN0RYLE9BQU9DLGVBQWVWLEVBQVMsYUFBYyxDQUFFb0IsT0FBTyxNLGdDQ0x2RCxNQUdJLFNBQVlDLEVBQVdDLEdBQ25CQyxLQUFLRixFQUFJQSxFQUNURSxLQUFLRCxFQUFJQSxHQUlqQixhQUdJLFdBQVlFLEVBQWNDLEVBQWNDLEVBQWVDLEdBRi9DLEtBQUFDLE9BQXdCLENBQUMsSUFPN0IsSUFKQSxJQUFNQyxFQUFXSCxHQUFTRixFQUFPLEdBQzNCTSxFQUFXSCxHQUFVRixFQUFPLEdBR3pCTSxFQUFJLEVBQUdBLEVBQUlQLEVBQU1PLElBQUssQ0FDM0JSLEtBQUtLLE9BQU9HLEdBQUssR0FDakIsSUFBSyxJQUFJQyxFQUFJLEVBQUdBLEVBQUlQLEVBQU1PLElBQ3RCVCxLQUFLSyxPQUFPRyxHQUFHQyxHQUFLLElBQUlDLEVBQVVGLEVBQUlGLEVBQVVHLEVBQUlGLElBK0JwRSxPQTFCSSxzQkFBSSxtQkFBSSxDLElBQVIsV0FDSSxPQUFPUCxLQUFLSyxPQUFPTSxRQUFPLFNBQUNDLEVBQUtDLEdBQVEsT0FBQUQsRUFBSUUsT0FBT0QsS0FBTSxLLGdDQUc3RCxZQUFBeEIsSUFBQSxXQUNJLE9BQU9XLEtBQUtLLFFBR2hCLFlBQUFVLElBQUEsU0FBSVYsR0FDQUwsS0FBS0ssT0FBU0EsR0FHbEIsWUFBQVcsU0FBQSxTQUFTQyxFQUFhQyxHQUNsQixPQUFPbEIsS0FBS0ssT0FBT1ksR0FBS0MsSUFHNUIsWUFBQUMsV0FBQSxTQUFXQyxFQUFrQkMsRUFBZ0JDLEVBQWtCQyxHQUMzRCxJQUFNQyxFQUFReEIsS0FBS0ssT0FBT21CLE1BQU1KLEVBQVVDLEVBQVMsR0FBR0ksS0FBSSxTQUFDakIsR0FBTSxPQUFBQSxFQUFFZ0IsTUFBTUYsRUFBVUMsRUFBUyxNQUN0RkcsRUFBZ0IsSUFBSUMsRUFBS0gsRUFBTSxHQUFHSSxPQUFRSixFQUFNSSxPQUFRLEVBQUcsR0FFakUsT0FEQUYsRUFBY1gsSUFBSVMsR0FDWEUsR0FHWCxZQUFBRyxLQUFBLFNBQUtDLEdBQ0Q5QixLQUFLK0IsS0FBS0MsU0FBUSxTQUFDQyxHQUFVLE9BQUFILEVBQUtHLE9BRTFDLEVBMUNBLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wcmV0dHlHcmlkL3dlYnBhY2svdW5pdmVyc2FsTW9kdWxlRGVmaW5pdGlvbiIsIndlYnBhY2s6Ly9wcmV0dHlHcmlkL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL3ByZXR0eUdyaWQvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3ByZXR0eUdyaWQvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9wcmV0dHlHcmlkL3dlYnBhY2svcnVudGltZS9tYWtlIG5hbWVzcGFjZSBvYmplY3QiLCJ3ZWJwYWNrOi8vcHJldHR5R3JpZC8uL3NyYy9ncmlkLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiB3ZWJwYWNrVW5pdmVyc2FsTW9kdWxlRGVmaW5pdGlvbihyb290LCBmYWN0b3J5KSB7XG5cdGlmKHR5cGVvZiBleHBvcnRzID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgbW9kdWxlID09PSAnb2JqZWN0Jylcblx0XHRtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoKTtcblx0ZWxzZSBpZih0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpXG5cdFx0ZGVmaW5lKFtdLCBmYWN0b3J5KTtcblx0ZWxzZSBpZih0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpXG5cdFx0ZXhwb3J0c1tcInByZXR0eUdyaWRcIl0gPSBmYWN0b3J5KCk7XG5cdGVsc2Vcblx0XHRyb290W1wicHJldHR5R3JpZFwiXSA9IGZhY3RvcnkoKTtcbn0pKHNlbGYsIGZ1bmN0aW9uKCkge1xucmV0dXJuICIsIi8vIFRoZSByZXF1aXJlIHNjb3BlXG52YXIgX193ZWJwYWNrX3JlcXVpcmVfXyA9IHt9O1xuXG4iLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiLy8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5yID0gKGV4cG9ydHMpID0+IHtcblx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG5cdH1cblx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbn07IiwiZXhwb3J0IGNsYXNzIEdyaWRQb2ludCB7XG4gICAgeDogbnVtYmVyO1xuICAgIHk6IG51bWJlcjtcbiAgICBjb25zdHJ1Y3Rvcih4OiBudW1iZXIsIHk6IG51bWJlcikge1xuICAgICAgICB0aGlzLnggPSB4O1xuICAgICAgICB0aGlzLnkgPSB5O1xuICAgIH1cbn1cblxuZXhwb3J0IGNsYXNzIEdyaWQge1xuICAgIHByaXZhdGUgcG9pbnRzOiBHcmlkUG9pbnRbXVtdID0gW1tdXTtcblxuICAgIGNvbnN0cnVjdG9yKGNvbHM6IG51bWJlciwgcm93czogbnVtYmVyLCB3aWR0aDogbnVtYmVyLCBoZWlnaHQ6IG51bWJlcikge1xuICAgICAgICBjb25zdCBzdGVwQ29scyA9IHdpZHRoIC8gKGNvbHMgLSAxKTtcbiAgICAgICAgY29uc3Qgc3RlcFJvd3MgPSBoZWlnaHQgLyAocm93cyAtIDEpO1xuXG4gICAgICAgIC8vIGluaXRpYWxpemUgZ3JpZFxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNvbHM7IGkrKykge1xuICAgICAgICAgICAgdGhpcy5wb2ludHNbaV0gPSBbXTtcbiAgICAgICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgcm93czsgaisrKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5wb2ludHNbaV1bal0gPSBuZXcgR3JpZFBvaW50KGkgKiBzdGVwQ29scywgaiAqIHN0ZXBSb3dzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGdldCBmbGF0KCk6IEdyaWRQb2ludFtdIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucG9pbnRzLnJlZHVjZSgoYWNjLCB2YWwpID0+IGFjYy5jb25jYXQodmFsKSwgW10pO1xuICAgIH1cblxuICAgIGdldCgpOiBHcmlkUG9pbnRbXVtdIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucG9pbnRzO1xuICAgIH1cblxuICAgIHNldChwb2ludHM6IEdyaWRQb2ludFtdW10pOiB2b2lkIHtcbiAgICAgICAgdGhpcy5wb2ludHMgPSBwb2ludHM7XG4gICAgfVxuXG4gICAgZ2V0UG9pbnQoY29sOiBudW1iZXIsIHJvdzogbnVtYmVyKTogR3JpZFBvaW50IHtcbiAgICAgICAgcmV0dXJuIHRoaXMucG9pbnRzW2NvbF1bcm93XTtcbiAgICB9XG5cbiAgICBnZXRTZWN0aW9uKHN0YXJ0Q29sOiBudW1iZXIsIGVuZENvbDogbnVtYmVyLCBzdGFydFJvdzogbnVtYmVyLCBlbmRSb3c6IG51bWJlcik6IEdyaWQge1xuICAgICAgICBjb25zdCBzbGljZSA9IHRoaXMucG9pbnRzLnNsaWNlKHN0YXJ0Q29sLCBlbmRDb2wgKyAxKS5tYXAoKGkpID0+IGkuc2xpY2Uoc3RhcnRSb3csIGVuZFJvdyArIDEpKTtcbiAgICAgICAgY29uc3QgZ3JpZEZyb21TbGljZSA9IG5ldyBHcmlkKHNsaWNlWzBdLmxlbmd0aCwgc2xpY2UubGVuZ3RoLCAwLCAwKTtcbiAgICAgICAgZ3JpZEZyb21TbGljZS5zZXQoc2xpY2UpO1xuICAgICAgICByZXR1cm4gZ3JpZEZyb21TbGljZTtcbiAgICB9XG5cbiAgICBkcmF3KGZ1bmM6IChwb2ludDogR3JpZFBvaW50KSA9PiB2b2lkKTogdm9pZCB7XG4gICAgICAgIHRoaXMuZmxhdC5mb3JFYWNoKChwb2ludCkgPT4gZnVuYyhwb2ludCkpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6WyJyb290IiwiZmFjdG9yeSIsImV4cG9ydHMiLCJtb2R1bGUiLCJkZWZpbmUiLCJhbWQiLCJzZWxmIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0Iiwib2JqIiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJ4IiwieSIsInRoaXMiLCJjb2xzIiwicm93cyIsIndpZHRoIiwiaGVpZ2h0IiwicG9pbnRzIiwic3RlcENvbHMiLCJzdGVwUm93cyIsImkiLCJqIiwiR3JpZFBvaW50IiwicmVkdWNlIiwiYWNjIiwidmFsIiwiY29uY2F0Iiwic2V0IiwiZ2V0UG9pbnQiLCJjb2wiLCJyb3ciLCJnZXRTZWN0aW9uIiwic3RhcnRDb2wiLCJlbmRDb2wiLCJzdGFydFJvdyIsImVuZFJvdyIsInNsaWNlIiwibWFwIiwiZ3JpZEZyb21TbGljZSIsIkdyaWQiLCJsZW5ndGgiLCJkcmF3IiwiZnVuYyIsImZsYXQiLCJmb3JFYWNoIiwicG9pbnQiXSwic291cmNlUm9vdCI6IiJ9